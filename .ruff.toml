# Settings for ruff
line-length = 150

[lint]
select = [
    "F",     # pyflakes
    "E",     # pycodestyle (Errors)
    "W",     # pycodestyle (Warnings)
    "C90",   # mccabe (complexity)
    "I",     # isort
    "N",     # pep8 naming
    "D",     # pydocstyle
    "UP",    # pyupgrade
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "EXE",   # flake8-executable
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slot
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "FIX",   # flake8-fixme
    "ERA",   # eradicate
    "PD",    # pandas-vet
    "PGH",   # pygrep-hooks
    "PL",    # pylint
    "TRY",   # tryceratops
    "FLY",   # flyint
    "NPY",   # NumPy-specific rules
    "AIR",   # Airflow
    "PERF",  # Perflint
    "RUF",   # Ruff-specific rules
]
#unused    "TD",    # flake8-todos

ignore = [
    # conflicts
    "D203", # `incorrect-blank-line-before-class` (D203)
    # `no-blank-line-before-class` (D211)

    "D212", # `multi-line-summary-first-line` (D212)
    # `multi-line-summary-second-line` (D213)

    # pydocstyle
    "D205", # blank-line-after-summary
    "D401", # non-imperative-mood

    # flake8-annotations
    "ANN002", # missing-type-args
    "ANN003", # missing-type-kwargs

    # flake8-pytest-style
    "PT011", # pytest-raises-too-broad

    # flake8-implicit-str-concat
    "ISC001", # single-line-implicit-string-concatenation

    # flake8-commas
    "COM812", # missing-trailing-comma

    # pylint
    "PLR2004", # magic-value-comparison

    # tryceratops
    "TRY003", # raise-vanilla-args

    # Ruff-specific rules
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[lint.per-file-ignores]
# Allow unused imports in __init__.py files within the app directory
# This is common for making symbols available at the package level.
# Also ignore commented-out code (ERA001) in these files to allow explanations.
"app/**/__init__.py" = ["F401", "ERA001"]